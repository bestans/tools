# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: all_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='all_config.proto',
  package='bestan.config',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x10\x61ll_config.proto\x12\rbestan.config\"\xa8\x01\n\x12test_python_config\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05\x63ount\x18\x02 \x01(\t\x12@\n\x0fskill_info_list\x18\x03 \x03(\x0b\x32\'.bestan.config.test_python_config.skill\x12\x12\n\nvalue_list\x18\x04 \x03(\x05\x1a!\n\x05skill\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04rate\x18\x02 \x01(\x05\"\xb0\x01\n\x16test_python_config_all\x12\x43\n\x07\x63onfigs\x18\x01 \x03(\x0b\x32\x32.bestan.config.test_python_config_all.ConfigsEntry\x1aQ\n\x0c\x43onfigsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\x30\n\x05value\x18\x02 \x01(\x0b\x32!.bestan.config.test_python_config:\x02\x38\x01\x62\x06proto3')
)




_TEST_PYTHON_CONFIG_SKILL = _descriptor.Descriptor(
  name='skill',
  full_name='bestan.config.test_python_config.skill',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bestan.config.test_python_config.skill.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rate', full_name='bestan.config.test_python_config.skill.rate', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=171,
  serialized_end=204,
)

_TEST_PYTHON_CONFIG = _descriptor.Descriptor(
  name='test_python_config',
  full_name='bestan.config.test_python_config',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='bestan.config.test_python_config.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='bestan.config.test_python_config.count', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='skill_info_list', full_name='bestan.config.test_python_config.skill_info_list', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value_list', full_name='bestan.config.test_python_config.value_list', index=3,
      number=4, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TEST_PYTHON_CONFIG_SKILL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=36,
  serialized_end=204,
)


_TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY = _descriptor.Descriptor(
  name='ConfigsEntry',
  full_name='bestan.config.test_python_config_all.ConfigsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='bestan.config.test_python_config_all.ConfigsEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='bestan.config.test_python_config_all.ConfigsEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=302,
  serialized_end=383,
)

_TEST_PYTHON_CONFIG_ALL = _descriptor.Descriptor(
  name='test_python_config_all',
  full_name='bestan.config.test_python_config_all',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='configs', full_name='bestan.config.test_python_config_all.configs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=207,
  serialized_end=383,
)

_TEST_PYTHON_CONFIG_SKILL.containing_type = _TEST_PYTHON_CONFIG
_TEST_PYTHON_CONFIG.fields_by_name['skill_info_list'].message_type = _TEST_PYTHON_CONFIG_SKILL
_TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY.fields_by_name['value'].message_type = _TEST_PYTHON_CONFIG
_TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY.containing_type = _TEST_PYTHON_CONFIG_ALL
_TEST_PYTHON_CONFIG_ALL.fields_by_name['configs'].message_type = _TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY
DESCRIPTOR.message_types_by_name['test_python_config'] = _TEST_PYTHON_CONFIG
DESCRIPTOR.message_types_by_name['test_python_config_all'] = _TEST_PYTHON_CONFIG_ALL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

test_python_config = _reflection.GeneratedProtocolMessageType('test_python_config', (_message.Message,), dict(

  skill = _reflection.GeneratedProtocolMessageType('skill', (_message.Message,), dict(
    DESCRIPTOR = _TEST_PYTHON_CONFIG_SKILL,
    __module__ = 'all_config_pb2'
    # @@protoc_insertion_point(class_scope:bestan.config.test_python_config.skill)
    ))
  ,
  DESCRIPTOR = _TEST_PYTHON_CONFIG,
  __module__ = 'all_config_pb2'
  # @@protoc_insertion_point(class_scope:bestan.config.test_python_config)
  ))
_sym_db.RegisterMessage(test_python_config)
_sym_db.RegisterMessage(test_python_config.skill)

test_python_config_all = _reflection.GeneratedProtocolMessageType('test_python_config_all', (_message.Message,), dict(

  ConfigsEntry = _reflection.GeneratedProtocolMessageType('ConfigsEntry', (_message.Message,), dict(
    DESCRIPTOR = _TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY,
    __module__ = 'all_config_pb2'
    # @@protoc_insertion_point(class_scope:bestan.config.test_python_config_all.ConfigsEntry)
    ))
  ,
  DESCRIPTOR = _TEST_PYTHON_CONFIG_ALL,
  __module__ = 'all_config_pb2'
  # @@protoc_insertion_point(class_scope:bestan.config.test_python_config_all)
  ))
_sym_db.RegisterMessage(test_python_config_all)
_sym_db.RegisterMessage(test_python_config_all.ConfigsEntry)


_TEST_PYTHON_CONFIG_ALL_CONFIGSENTRY._options = None
# @@protoc_insertion_point(module_scope)
