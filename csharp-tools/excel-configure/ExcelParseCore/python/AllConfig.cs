// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: all_config.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bestan.Config {

  /// <summary>Holder for reflection information generated from all_config.proto</summary>
  public static partial class AllConfigReflection {

    #region Descriptor
    /// <summary>File descriptor for all_config.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AllConfigReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBhbGxfY29uZmlnLnByb3RvEg1iZXN0YW4uY29uZmlnIqgBChJ0ZXN0X3B5",
            "dGhvbl9jb25maWcSCgoCaWQYASABKAUSDQoFY291bnQYAiABKAkSQAoPc2tp",
            "bGxfaW5mb19saXN0GAMgAygLMicuYmVzdGFuLmNvbmZpZy50ZXN0X3B5dGhv",
            "bl9jb25maWcuc2tpbGwSEgoKdmFsdWVfbGlzdBgEIAMoBRohCgVza2lsbBIK",
            "CgJpZBgBIAEoBRIMCgRyYXRlGAIgASgFIrABChZ0ZXN0X3B5dGhvbl9jb25m",
            "aWdfYWxsEkMKB2NvbmZpZ3MYASADKAsyMi5iZXN0YW4uY29uZmlnLnRlc3Rf",
            "cHl0aG9uX2NvbmZpZ19hbGwuQ29uZmlnc0VudHJ5GlEKDENvbmZpZ3NFbnRy",
            "eRILCgNrZXkYASABKAUSMAoFdmFsdWUYAiABKAsyIS5iZXN0YW4uY29uZmln",
            "LnRlc3RfcHl0aG9uX2NvbmZpZzoCOAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bestan.Config.test_python_config), global::Bestan.Config.test_python_config.Parser, new[]{ "Id", "Count", "SkillInfoList", "ValueList" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Bestan.Config.test_python_config.Types.skill), global::Bestan.Config.test_python_config.Types.skill.Parser, new[]{ "Id", "Rate" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bestan.Config.test_python_config_all), global::Bestan.Config.test_python_config_all.Parser, new[]{ "Configs" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class test_python_config : pb::IMessage<test_python_config> {
    private static readonly pb::MessageParser<test_python_config> _parser = new pb::MessageParser<test_python_config>(() => new test_python_config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<test_python_config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bestan.Config.AllConfigReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config(test_python_config other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      skillInfoList_ = other.skillInfoList_.Clone();
      valueList_ = other.valueList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config Clone() {
      return new test_python_config(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    ///索引
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private string count_ = "";
    /// <summary>
    ///数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Count {
      get { return count_; }
      set {
        count_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "skill_info_list" field.</summary>
    public const int SkillInfoListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bestan.Config.test_python_config.Types.skill> _repeated_skillInfoList_codec
        = pb::FieldCodec.ForMessage(26, global::Bestan.Config.test_python_config.Types.skill.Parser);
    private readonly pbc::RepeatedField<global::Bestan.Config.test_python_config.Types.skill> skillInfoList_ = new pbc::RepeatedField<global::Bestan.Config.test_python_config.Types.skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bestan.Config.test_python_config.Types.skill> SkillInfoList {
      get { return skillInfoList_; }
    }

    /// <summary>Field number for the "value_list" field.</summary>
    public const int ValueListFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_valueList_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> valueList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ValueList {
      get { return valueList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as test_python_config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(test_python_config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      if(!skillInfoList_.Equals(other.skillInfoList_)) return false;
      if(!valueList_.Equals(other.valueList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count.Length != 0) hash ^= Count.GetHashCode();
      hash ^= skillInfoList_.GetHashCode();
      hash ^= valueList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Count);
      }
      skillInfoList_.WriteTo(output, _repeated_skillInfoList_codec);
      valueList_.WriteTo(output, _repeated_valueList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Count);
      }
      size += skillInfoList_.CalculateSize(_repeated_skillInfoList_codec);
      size += valueList_.CalculateSize(_repeated_valueList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(test_python_config other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count.Length != 0) {
        Count = other.Count;
      }
      skillInfoList_.Add(other.skillInfoList_);
      valueList_.Add(other.valueList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Count = input.ReadString();
            break;
          }
          case 26: {
            skillInfoList_.AddEntriesFrom(input, _repeated_skillInfoList_codec);
            break;
          }
          case 34:
          case 32: {
            valueList_.AddEntriesFrom(input, _repeated_valueList_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the test_python_config message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class skill : pb::IMessage<skill> {
        private static readonly pb::MessageParser<skill> _parser = new pb::MessageParser<skill>(() => new skill());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<skill> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bestan.Config.test_python_config.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public skill() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public skill(skill other) : this() {
          id_ = other.id_;
          rate_ = other.rate_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public skill Clone() {
          return new skill(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        /// <summary>
        ///技能id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "rate" field.</summary>
        public const int RateFieldNumber = 2;
        private int rate_;
        /// <summary>
        ///技能概率
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Rate {
          get { return rate_; }
          set {
            rate_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as skill);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(skill other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Rate != other.Rate) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Rate != 0) hash ^= Rate.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (Rate != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Rate);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Rate != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rate);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(skill other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Rate != 0) {
            Rate = other.Rate;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                Rate = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class test_python_config_all : pb::IMessage<test_python_config_all> {
    private static readonly pb::MessageParser<test_python_config_all> _parser = new pb::MessageParser<test_python_config_all>(() => new test_python_config_all());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<test_python_config_all> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bestan.Config.AllConfigReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config_all() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config_all(test_python_config_all other) : this() {
      configs_ = other.configs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public test_python_config_all Clone() {
      return new test_python_config_all(this);
    }

    /// <summary>Field number for the "configs" field.</summary>
    public const int ConfigsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Bestan.Config.test_python_config>.Codec _map_configs_codec
        = new pbc::MapField<int, global::Bestan.Config.test_python_config>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::Bestan.Config.test_python_config.Parser), 10);
    private readonly pbc::MapField<int, global::Bestan.Config.test_python_config> configs_ = new pbc::MapField<int, global::Bestan.Config.test_python_config>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Bestan.Config.test_python_config> Configs {
      get { return configs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as test_python_config_all);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(test_python_config_all other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Configs.Equals(other.Configs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Configs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      configs_.WriteTo(output, _map_configs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += configs_.CalculateSize(_map_configs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(test_python_config_all other) {
      if (other == null) {
        return;
      }
      configs_.Add(other.configs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            configs_.AddEntriesFrom(input, _map_configs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
