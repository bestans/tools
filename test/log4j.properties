###自定义通用设置
#日志根目录
mylog.path = D://logs
#写文件方式
mylog.appender = org.apache.log4j.FileAppender
#mylog.appender = bestan.common.log.MyAppender
#true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容
mylog.append = true
#自定义总级别：TRACE < DEBUG < INFO < WARN < ERROR < FATAL
mylog.level = TRACE
#false表示只输出到自定义日志，true表示也同时输出到rootLogger
mylog.additivity = false
#指定布局模式
mylog.layout = org.apache.log4j.PatternLayout
#设定以怎样的格式显示消息
mylog.layout.ConversionPattern = %d|%m%n
#logserver自带的消息格式
mylog.layout.SYSTEM.ConversionPattern = %d|[LOG_SERVER]%m%n

### 设置###
log4j.rootLogger = ${mylog.level},stdout,server

### 输出信息到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = ${mylog.layout}
log4j.appender.stdout.layout.ConversionPattern = ${mylog.layout.ConversionPattern}

#其他默认日志
log4j.appender.LOGSERVER = org.apache.log4j.FileAppender
log4j.appender.LOGSERVER.File = ${mylog.path}/trace.log
log4j.appender.LOGSERVER.Append = ${mylog.append}
log4j.appender.LOGSERVER.Threshold = TRACE
log4j.appender.LOGSERVER.layout = ${mylog.layout}
log4j.appender.LOGSERVER.layout.ConversionPattern = ${mylog.layout.SYSTEM.ConversionPattern}

#log4j.appender.server=org.apache.log4j.net.SocketAppender
log4j.appender.server=bestan.common.log.BSocketAppender
#Port where socket server will be listening for the log events
log4j.appender.server.Port=4712
#Host name or IP address of socket server
log4j.appender.server.RemoteHost=127.0.0.1
#Define any connection delay before attempting to reconnect
log4j.appender.server.ReconnectionDelay=0
log4j.appender.server.Threshold = ${mylog.level}
